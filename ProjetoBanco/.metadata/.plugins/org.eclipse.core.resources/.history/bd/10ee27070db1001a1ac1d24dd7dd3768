package negocio;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.util.ArrayList;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class GerContasTest_contaAtiva {

	GerenciadoraContas gerContas;
	ArrayList<ContaCorrente> listaContas = new ArrayList<ContaCorrente>();
	
	ContaCorrente conta1;
	ContaCorrente conta2;
	ContaCorrente conta3;
	
	int idContaAtiva = 1;
	int idContaInativa = 2;
	
	
	@Before
	public void setup() {
		/* =============== Criacao do cenario =============== */
		
		conta1 = new ContaCorrente(1, 1000, true);
		conta2 = new ContaCorrente(2, 0, false);
		conta3 = new ContaCorrente(3, 200, true);
		
		listaContas.add(conta1);
		listaContas.add(conta2);
		listaContas.add(conta3);
		
		gerContas = new GerenciadoraContas(listaContas);
		
	}
	
	@After
	public void tearDown() {
		gerContas.removeConta(conta1.getId());
		gerContas.removeConta(conta2.getId());
		gerContas.removeConta(conta3.getId());
	}
	
	/* Este	teste verifica se um conta está ativa, o resultado esperado é que a conta esteja ativa
	 * 
	 * @author Willian Ronaldo
	 * @date 17/04/2020
	 * */
	@Test
	public void testContaAtiva_ativa() {
		
		for(int i = 0; i < gerContas.getContasDoBanco().size(); i++) {
			ContaCorrente auxConta = new ContaCorrente(gerContas.getContasDoBanco().get(i).getId(), gerContas.getContasDoBanco().get(i).getSaldo(), gerContas.getContasDoBanco().get(i).isAtiva());
			
			if(auxConta.getId() == idContaAtiva) {
				assertTrue("Esta conta deveria estar ativa", auxConta.isAtiva());
			}
		}
	}
	
	/* Este	teste verifica se um conta está ativa, o resultado esperado é que a conta esteja inativa
	 * 
	 * @author Willian Ronaldo
	 * @date 17/04/2020
	 * */
	@Test
	public void testContaAtiva_inativa() {
	
		for(int i = 0; i < gerContas.getContasDoBanco().size(); i++) {
			ContaCorrente auxConta = new ContaCorrente(gerContas.getContasDoBanco().get(i).getId(), gerContas.getContasDoBanco().get(i).getSaldo(), gerContas.getContasDoBanco().get(i).isAtiva());
			
			if(auxConta.getId() == idContaAtiva) {
				assertFalse("Esta conta deveria estar desativada", auxConta.isAtiva());
			}
		}
	}
	
}
