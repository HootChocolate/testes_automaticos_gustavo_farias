package negocio;

import static org.junit.Assert.*;

import java.util.ArrayList;
import java.util.List;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

public class GerContasTest_getContasDoBanco {

	GerenciadoraContas gerContas;
	ArrayList<ContaCorrente> listaContas = new ArrayList<ContaCorrente>();
	
	ContaCorrente conta1;
	ContaCorrente conta2;
	ContaCorrente conta3;
	
	
	@Before
	public void setup() {
		/* =============== Criacao do cenario =============== */
		
		conta1 = new ContaCorrente(1, 1000, true);
		conta2 = new ContaCorrente(2, 0, false);
		conta3 = new ContaCorrente(3, 200, true);
		
		listaContas.add(conta1);
		listaContas.add(conta2);
		listaContas.add(conta3);
		
		gerContas = new GerenciadoraContas(listaContas);
		
	}
	
	@After
	public void tearDown() {
		gerContas.removeConta(conta1.getId());
		gerContas.removeConta(conta2.getId());
		gerContas.removeConta(conta3.getId());
	}
	
	/* Teste para verificar o retorno de todos os clientes do banco, contas ativas e inativas
	 * 
	 * @author Willian Ronaldo
	 * @date 17/06/2020
	 * */
	@Test
	public void testGetContasDoBanco() {
		
		int totalContas = gerContas.getContasDoBanco().size();
		
		assertNotNull("Total de contas do banco est√° null", gerContas);
		assertEquals("Falha ao retornar todas as contas do banco", 3, totalContas);
	}
	
	/* Teste para verificar o retorno de todas as contas inativas
	 * 
	 * @author Willian Ronaldo
	 * @date 17/06/2020
	 * */
	@Test
	public void testGetContasDoBanco_inativas() {
		
		java.util.List<ContaCorrente> clientesDoBanco = gerContas.getContasDoBanco();
		
		int contasInativas = 0;
		
		for (int i = 0; i < clientesDoBanco.size(); i++) {
			if(!clientesDoBanco.get(i).isAtiva()) {
				contasInativas++;
			}
		}
		
		assertEquals("Quantidade de contas inativas divergentes com o esperado", contasInativas, 1);
		
	}
	
	/* Teste para retornar todas as contas ativas do banco
	 * @author Willian Ronaldo
	 * @date 17/06/2020
	 * */
	@Test
	public void testGetContasDoBanco_ativas() {
		java.util.List<ContaCorrente> listaContas = gerContas.getContasDoBanco();
		int contasAtivas = 0 ;
		
		for(int i = 0 ; i < listaContas.size() ; i++) {
			if(listaContas.get(i).isAtiva()) {
				contasAtivas++;
			}
		}
		
		assertEquals("Quantidade de contas ativas com divergencia no teste", contasAtivas, 3);
	}
}
